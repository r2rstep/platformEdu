version: "3.3"
services:

  db:
    image: postgres:12
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - pg
      - backend
    ports:
      - "5432:5432"
    deploy:
      placement:
        constraints:
          - node.labels.${STACK_NAME?Variable not set}.app-db-data == true

  pgadmin:
    image: dpage/pgadmin4
    networks:
      - pg
    depends_on:
      - db
    env_file:
      - .env


  queue:
    image: rabbitmq:3
    env_file:
      - .env
    networks:
      - tasks


  celeryworker:
    image: '${DOCKER_IMAGE_CELERYWORKER?Variable not set}:${TAG-latest}'
    depends_on:
      - queue
    env_file:
      - .env
    networks:
      - tasks
      - backend
    build:
      context: .
      dockerfile: celeryworker.dockerfile


  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    depends_on:
      - db
      - celeryworker
    ports:
      - 3000:8000
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST}
    networks:
      - backend
    build:
      context: .
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    command: bash -c "python app/initial_data.py && uvicorn --host 0.0.0.0 app.main:app"

volumes:
  app-db-data:

networks:
  backend:
  pg:
  tasks:
